services:
  dbt:
    image: dbt-labs/dbt-spark:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - dbt-hive-metastore
    privileged: true
    volumes:
      - $PWD:/usr/app/dbt
    working_dir: /usr/app/dbt
    environment:
      TESTCONTAINERS_RYUK_DISABLED: 'true'
      SPARK_JARS_REPOSITORIES: ${SPARK_JARS_REPOSITORIES}
      DOCKER_HOST: "http://dind.docker.internal:2375"
  dbt-hive-metastore:
    image: postgres:9-alpine
    hostname: metastore.docker.internal
    volumes:
      - ./.hive-metastore/:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=dbt
      - POSTGRES_PASSWORD=dbt
      - POSTGRES_DB=metastore
  dind:
    hostname: dind.docker.internal
    privileged: true
    image: "docker:dind"
    environment:
      DOCKER_TLS_CERTDIR:

  airflow:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    command: ["standalone"]
    user: "${UID:-50000}:0"
    environment:
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      _PIP_ADDITIONAL_REQUIREMENTS: ''

    volumes:
      - ./.airflow/:/opt/airflow/
      - ./airflow/dags/:/opt/airflow/dags/
      - .:/opt/airflow/dbt/
      - ./avro-functions/target/scala-2.12/avro-functions_2.12-0.1.0.jar:/usr/spark/jars/avro-functions_2.12.jar
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
